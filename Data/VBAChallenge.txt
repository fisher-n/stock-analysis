Sub AllStocksAnalysisRefactored()
    Dim startTime As Single
    Dim endTime  As Single

    yearValue = InputBox("What year would you like to run the analysis on?")

        startTime = Timer
    
    'Format the output sheet on All Stocks Analysis worksheet
    Worksheets("All Stocks Analysis").Activate
    
    'Make title in cell A1 "All Stocks (yearValue)"
    Cells(1, 1).Value = "All Stocks (" + yearValue + ")"
    
    'add 3 columns and headers
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"

    'create an array to hold 12 tickers
    Dim tickers(11) As String
    
    'assign tickers to each element in the array
    tickers(0) = "AY"
    tickers(1) = "CSIQ"
    tickers(2) = "DQ"
    tickers(3) = "ENPH"
    tickers(4) = "FSLR"
    tickers(5) = "HASI"
    tickers(6) = "JKS"
    tickers(7) = "RUN"
    tickers(8) = "SEDG"
    tickers(9) = "SPWR"
    tickers(10) = "TERP"
    tickers(11) = "VSLR"
    
    'Activate data worksheet
    Worksheets(yearValue).Activate
    
    'Find number of rows to loop
    RowCount = Cells(Rows.Count, "A").End(xlUp).Row
    
    'Step 1a Create a ticker Index
    tickerIndex = 0

    'Step 1b Create three output arrays
    Dim tickerVolumes(11) As Long
    Dim tickerStartingPrices(11) As Single
    Dim tickerEndingPrices(11) As Single
    
    'Step 2a Create a for loop to initialize the tickerVolumes to zero
    For j = 0 To 11
        
        'set tickerVolume for that j to zero
        tickerVolumes(j) = 0
        
    Next j
        
    'Step 2b Loop over all the rows
    For i = 2 To RowCount
    
    'Step 3a Increase stock ticker volume
        tickerVolumes(tickerIndex) = tickerVolumes(tickerIndex) + Cells(i, 8).Value
        
    'Step 3b Check if the current row is the first row with the selected tickerIndex
        If Cells(i, 1) = tickers(tickerIndex) And Cells(i - 1, 1) <> tickers(tickerIndex) Then
            tickerStartingPrices(tickerIndex) = Cells(i, 6).Value
            
        End If
        
    'Step 3c check if the current row is the last row with the selected ticker
        If Cells(i, 1) = tickers(tickerIndex) And Cells(i + 1, 1) <> tickers(tickerIndex) Then
            tickerEndingPrices(tickerIndex) = Cells(i, 6).Value

    'Step3d Increase the tickerIndex if next rows ticker doesnt match
        tickerIndex = tickerIndex + 1
            
        End If
    
    Next i
    

    
    'Step 4 Use a for loop to loop through arrays to output "ticker", "total daily volume", and "return"
    For i = 0 To 11
        
        Worksheets("All Stocks Analysis").Activate
        
        tickerIndex = i
        
        Cells(4 + i, 1).Value = tickers(tickerIndex)
        Cells(4 + i, 2).Value = tickerVolumes(tickerIndex)
        Cells(4 + i, 3).Value = tickerEndingPrices(tickerIndex) / tickerStartingPrices(tickerIndex) - 1
        
    Next i
    
    'Formatting
    Worksheets("All Stocks Analysis").Activate
    Range("A3:C3").Font.FontStyle = "Bold"
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("B4:B15").NumberFormat = "#,##0"
    Range("C4:C15").NumberFormat = "0.0%"
    Columns("B").AutoFit

    dataRowStart = 4
    dataRowEnd = 15

    For i = dataRowStart To dataRowEnd
        
        If Cells(i, 3) > 0 Then
        Cells(i, 3).Interior.Color = vbGreen
            
        Else: Cells(i, 3).Interior.Color = vbRed
            
        End If
        
    Next i
    
    endTime = Timer
        MsgBox "This code ran in " & (endTime - startTime) & " seconds for the year " & yearValue & "."
        
    
End Sub
